package form;

import control.*;
import server.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class frmServer extends javax.swing.JInternalFrame implements SMSInterface {
    ServerSMS smsServer;
    MenuUtama mUtama;
    ctrlPesan ctrlPesan;
    ctrlComponent ctrlComp;
    ctrlManipulasiData ctrlManData;
    ctrlAlert ctrlAlert;
    ctrlIDgenerator ctrlID;
    
    /** Creates new form frmServer */
    public frmServer(MenuUtama mUtama) {
        initComponents();
        
        this.mUtama = mUtama; 
        smsServer = new ServerSMS(this);
        ctrlPesan = new ctrlPesan(mUtama, this);
        ctrlComp  = new ctrlComponent();
        ctrlManData = new ctrlManipulasiData(mUtama);
        ctrlAlert = new ctrlAlert(mUtama);
        ctrlID    = new ctrlIDgenerator();
        
        tbModKaryawan = (DefaultTableModel) ctrlComp.getDefaultTabelModelCheckBox(
                new String[]{"PILIH","ID KARYAWAN","NAMA KARYAWAN","ALAMAT","NOMER HP","JABATAN"});
        tblDataKaryawan.setModel(tbModKaryawan);          
        ctrlComp.setTabel(tblDataKaryawan,new int[]{70,120,200,300,120,120}); 
        
        tbModSmsMasuk = (DefaultTableModel) ctrlComp.getDefaultTabelModel(
        new String[]{"NO","NO.INBOX","ID REGISTRASI","NOMER HP","WAKTU","JUDUL","ISI PESAN","BALASAN"});
        tblSmsMasuk.setModel(tbModSmsMasuk);          
        ctrlComp.setTabel(tblSmsMasuk,new int[]{25,100,130,120,120,150,300,200});
                
        listProses.setModel(listModel);  
        
        isiTableKaryawan();
        isiComboKec();
        isiComboCari();
        deteksiPort();
        setCtrlButton(true);
        setAwal();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblPort = new javax.swing.JLabel();
        cbPort = new javax.swing.JComboBox();
        lblKec = new javax.swing.JLabel();
        cbKecepatan = new javax.swing.JComboBox();
        btnBukaKoneksi = new javax.swing.JButton();
        btnTutupKoneksi = new javax.swing.JButton();
        progresSinyal = new javax.swing.JProgressBar();
        lblSinyal1 = new javax.swing.JLabel();
        lblStatusKoneksi = new javax.swing.JLabel();
        lblStat1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lblIsiBC = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtIsiBroadcast = new javax.swing.JTextArea();
        btnKirimBroadcast = new javax.swing.JButton();
        btnBatalBroadcast = new javax.swing.JButton();
        lblKarakter = new javax.swing.JLabel();
        lblJmlKarakter = new javax.swing.JLabel();
        btnClearIsi = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        tabPane = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        btnClearList = new javax.swing.JButton();
        btnTestSMS = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        listProses = new javax.swing.JList();
        jPanel9 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDataKaryawan = new javax.swing.JTable();
        chkKirimSemua = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        cmbCari = new javax.swing.JComboBox();
        txtCari = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSmsMasuk = new javax.swing.JTable();
        lblKet = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNoInbox = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtIdReg = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtWaktu = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtIsi = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtBalas = new javax.swing.JTextArea();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        setClosable(true);
        setTitle("Form Server SMS");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Kontrol Koneksi"));
        jPanel1.setLayout(null);

        lblPort.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPort.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPort.setText("Port : ");
        jPanel1.add(lblPort);
        lblPort.setBounds(10, 15, 90, 20);

        cbPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPortActionPerformed(evt);
            }
        });
        jPanel1.add(cbPort);
        cbPort.setBounds(100, 15, 130, 20);

        lblKec.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblKec.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblKec.setText("Baud Rate : ");
        jPanel1.add(lblKec);
        lblKec.setBounds(10, 40, 90, 20);

        jPanel1.add(cbKecepatan);
        cbKecepatan.setBounds(100, 40, 130, 20);

        btnBukaKoneksi.setText("CONNECT");
        btnBukaKoneksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBukaKoneksiActionPerformed(evt);
            }
        });
        jPanel1.add(btnBukaKoneksi);
        btnBukaKoneksi.setBounds(10, 80, 110, 30);

        btnTutupKoneksi.setText("DISCONNECT");
        btnTutupKoneksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTutupKoneksiActionPerformed(evt);
            }
        });
        jPanel1.add(btnTutupKoneksi);
        btnTutupKoneksi.setBounds(120, 80, 110, 30);
        jPanel1.add(progresSinyal);
        progresSinyal.setBounds(260, 30, 210, 30);

        lblSinyal1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSinyal1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSinyal1.setText("Sinyal : ");
        jPanel1.add(lblSinyal1);
        lblSinyal1.setBounds(260, 10, 80, 20);

        lblStatusKoneksi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblStatusKoneksi.setForeground(new java.awt.Color(255, 0, 51));
        lblStatusKoneksi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatusKoneksi.setText("Terkoneksi Dengan COM 8");
        lblStatusKoneksi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(lblStatusKoneksi);
        lblStatusKoneksi.setBounds(260, 110, 210, 30);

        lblStat1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblStat1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblStat1.setText("Status Koneksi : ");
        jPanel1.add(lblStat1);
        lblStat1.setBounds(140, 120, 100, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(360, 10, 490, 190);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Kontrol Broadcasting"));
        jPanel5.setLayout(null);

        lblIsiBC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblIsiBC.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblIsiBC.setText("Isi Pesan Broadcast : ");
        jPanel5.add(lblIsiBC);
        lblIsiBC.setBounds(10, 20, 180, 20);

        txtIsiBroadcast.setColumns(20);
        txtIsiBroadcast.setLineWrap(true);
        txtIsiBroadcast.setRows(2);
        txtIsiBroadcast.setWrapStyleWord(true);
        txtIsiBroadcast.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtIsiBroadcastCaretUpdate(evt);
            }
        });
        jScrollPane3.setViewportView(txtIsiBroadcast);

        jPanel5.add(jScrollPane3);
        jScrollPane3.setBounds(10, 40, 310, 70);

        btnKirimBroadcast.setText("KIRIM");
        btnKirimBroadcast.setToolTipText("Kirim SMS Ke Pelanggan Terpilih");
        btnKirimBroadcast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKirimBroadcastActionPerformed(evt);
            }
        });
        jPanel5.add(btnKirimBroadcast);
        btnKirimBroadcast.setBounds(20, 150, 110, 30);

        btnBatalBroadcast.setText("BATAL");
        btnBatalBroadcast.setToolTipText("Batal Broadcasting");
        btnBatalBroadcast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalBroadcastActionPerformed(evt);
            }
        });
        jPanel5.add(btnBatalBroadcast);
        btnBatalBroadcast.setBounds(180, 150, 110, 30);

        lblKarakter.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblKarakter.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblKarakter.setText("Karakter / Halaman : ");
        jPanel5.add(lblKarakter);
        lblKarakter.setBounds(10, 120, 120, 23);

        lblJmlKarakter.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblJmlKarakter.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblJmlKarakter.setText("0 / 1");
        jPanel5.add(lblJmlKarakter);
        lblJmlKarakter.setBounds(130, 120, 40, 23);

        btnClearIsi.setText("clear");
        btnClearIsi.setToolTipText("Bersihkan Textbox");
        btnClearIsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearIsiActionPerformed(evt);
            }
        });
        jPanel5.add(btnClearIsi);
        btnClearIsi.setBounds(190, 120, 90, 23);

        getContentPane().add(jPanel5);
        jPanel5.setBounds(20, 10, 330, 190);

        jPanel7.setLayout(null);

        jPanel10.setLayout(null);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Respon Terminal"));
        jPanel6.setLayout(null);

        btnClearList.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnClearList.setForeground(new java.awt.Color(204, 0, 0));
        btnClearList.setText("CLEAR");
        btnClearList.setToolTipText("Bersihkan List Proses");
        btnClearList.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        btnClearList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearListActionPerformed(evt);
            }
        });
        jPanel6.add(btnClearList);
        btnClearList.setBounds(760, 230, 70, 30);

        btnTestSMS.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnTestSMS.setForeground(new java.awt.Color(204, 0, 0));
        btnTestSMS.setText("TEST");
        btnTestSMS.setToolTipText("Test Simulasi SMS");
        btnTestSMS.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        btnTestSMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestSMSActionPerformed(evt);
            }
        });
        jPanel6.add(btnTestSMS);
        btnTestSMS.setBounds(680, 230, 70, 30);

        listProses.setBackground(new java.awt.Color(153, 153, 255));
        listProses.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(listProses);

        jPanel6.add(jScrollPane4);
        jScrollPane4.setBounds(10, 20, 820, 200);

        jPanel10.add(jPanel6);
        jPanel6.setBounds(0, 0, 840, 280);

        tabPane.addTab("List Proses Server", jPanel10);

        jPanel9.setLayout(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Data Karyawan"));
        jPanel2.setLayout(null);

        tblDataKaryawan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane1.setViewportView(tblDataKaryawan);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 15, 810, 210);

        chkKirimSemua.setText("Kirim Ke Semua");
        chkKirimSemua.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chkKirimSemua.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chkKirimSemua.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkKirimSemuaItemStateChanged(evt);
            }
        });
        jPanel2.add(chkKirimSemua);
        chkKirimSemua.setBounds(10, 230, 120, 15);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Cari Bedasarkan :");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(310, 230, 120, 18);

        jPanel2.add(cmbCari);
        cmbCari.setBounds(430, 230, 100, 18);

        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCariKeyReleased(evt);
            }
        });
        jPanel2.add(txtCari);
        txtCari.setBounds(540, 230, 150, 19);

        btnCari.setText("CARI");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        jPanel2.add(btnCari);
        btnCari.setBounds(700, 230, 73, 18);

        jPanel9.add(jPanel2);
        jPanel2.setBounds(5, 0, 830, 260);

        tabPane.addTab("Data Karyawan Broadcast", jPanel9);

        jPanel8.setLayout(null);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Data SMS Masuk"));
        jPanel4.setLayout(null);

        tblSmsMasuk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ));
        tblSmsMasuk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSmsMasukMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSmsMasuk);

        jPanel4.add(jScrollPane2);
        jScrollPane2.setBounds(10, 150, 810, 90);

        lblKet.setForeground(new java.awt.Color(255, 0, 51));
        lblKet.setText("* Klik 2x Untuk Melihat Detail SMS");
        jPanel4.add(lblKet);
        lblKet.setBounds(10, 240, 380, 14);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("No. Inbox : ");
        jPanel4.add(jLabel2);
        jLabel2.setBounds(10, 20, 90, 23);

        txtNoInbox.setEditable(false);
        txtNoInbox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel4.add(txtNoInbox);
        txtNoInbox.setBounds(100, 20, 150, 23);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("ID Registrasi: ");
        jPanel4.add(jLabel3);
        jLabel3.setBounds(480, 20, 130, 23);

        txtIdReg.setEditable(false);
        txtIdReg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel4.add(txtIdReg);
        txtIdReg.setBounds(620, 20, 140, 23);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Waktu : ");
        jPanel4.add(jLabel5);
        jLabel5.setBounds(40, 50, 60, 23);

        txtWaktu.setEditable(false);
        txtWaktu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel4.add(txtWaktu);
        txtWaktu.setBounds(100, 50, 150, 23);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Isi Pesan : ");
        jPanel4.add(jLabel7);
        jLabel7.setBounds(10, 80, 90, 25);

        txtIsi.setEditable(false);
        txtIsi.setColumns(20);
        txtIsi.setLineWrap(true);
        txtIsi.setRows(2);
        txtIsi.setWrapStyleWord(true);
        jScrollPane5.setViewportView(txtIsi);

        jPanel4.add(jScrollPane5);
        jScrollPane5.setBounds(100, 80, 720, 30);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Balasan : ");
        jPanel4.add(jLabel8);
        jLabel8.setBounds(10, 115, 90, 25);

        txtBalas.setColumns(20);
        txtBalas.setEditable(false);
        txtBalas.setLineWrap(true);
        txtBalas.setRows(2);
        txtBalas.setWrapStyleWord(true);
        jScrollPane6.setViewportView(txtBalas);

        jPanel4.add(jScrollPane6);
        jScrollPane6.setBounds(100, 115, 720, 30);

        jPanel8.add(jPanel4);
        jPanel4.setBounds(5, 0, 830, 270);

        tabPane.addTab("SMS Masuk", jPanel8);

        jPanel7.add(tabPane);
        tabPane.setBounds(0, 0, 850, 320);

        getContentPane().add(jPanel7);
        jPanel7.setBounds(10, 210, 850, 320);

        setBounds(0, 0, 870, 582);
    }// </editor-fold>//GEN-END:initComponents

    int baris; java.awt.Frame frame;
    String NOINBOX,IDREG,NOHP,WAKTU,JUDUL,ISI,BALASAN;
    private void tblSmsMasukMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSmsMasukMouseClicked
        baris = tblSmsMasuk.getSelectedRow();
        if(evt.getClickCount() == 2){           
            NOINBOX = tblSmsMasuk.getValueAt(baris,1).toString();
            IDREG   = tblSmsMasuk.getValueAt(baris,2).toString();
            NOHP    = tblSmsMasuk.getValueAt(baris,3).toString();
            WAKTU   = tblSmsMasuk.getValueAt(baris,4).toString();            
            JUDUL   = tblSmsMasuk.getValueAt(baris,5).toString();
            ISI     = tblSmsMasuk.getValueAt(baris,6).toString();            
            BALASAN = tblSmsMasuk.getValueAt(baris,7).toString();
        
            txtNoInbox.setText(NOINBOX);
            txtIdReg.setText(IDREG);
            txtWaktu.setText(WAKTU);
            txtIsi.setText(ISI);
            txtBalas.setText(BALASAN);
            
//            frmSmsViewer fView = new frmSmsViewer(frame,this, true);
//            fView.setLocationRelativeTo(this);
//            fView.setVisible(true);
        }
    }//GEN-LAST:event_tblSmsMasukMouseClicked

    public String [] dataTblSMSMasuk(){
        return new String[]{NOINBOX,IDREG,NOHP,WAKTU,JUDUL,ISI,BALASAN};
    }
    private void txtIsiBroadcastCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtIsiBroadcastCaretUpdate
        setKarakter();
    }//GEN-LAST:event_txtIsiBroadcastCaretUpdate

    private void setKarakter(){
        int panjang  = txtIsiBroadcast.getText().length();
        int perhlman = PERHALAMAN ;
        int x   = panjang / perhlman;
        int y   = panjang % perhlman;
        String karakter = "0";
        String halaman  = "1";
        
        if(panjang>0){
            if(y>0){
                karakter    = String.valueOf(y);
                halaman     = String.valueOf(x+1);
            }
            else {
                karakter    = String.valueOf(perhlman);
                halaman     = String.valueOf(x);
            }
        }
        
        lblJmlKarakter.setText(karakter+" / "+halaman);
    }
    
    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        keluar();
    }//GEN-LAST:event_formInternalFrameClosing

    private void keluar(){
        if(flagKoneksi){
            ctrlAlert.getWarningMessage(ctrlAlert.KONEKSI_OPEN,ctrlAlert.WARNING);
            setDefaultCloseOperation(javax.swing.JInternalFrame.DO_NOTHING_ON_CLOSE);
        }else{
            dispose();
        }
    }
    
    private void chkKirimSemuaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkKirimSemuaItemStateChanged
        int count = tblDataKaryawan.getRowCount();
        if(chkKirimSemua.isSelected()){            
            for(int i = 0; i < count; i++){
                tblDataKaryawan.setValueAt(true,i,0);
            }
        }else{
            for(int i = 0; i < count; i++){
                tblDataKaryawan.setValueAt(false,i,0);
            }
        }
    }//GEN-LAST:event_chkKirimSemuaItemStateChanged

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        isiTableKaryawan();
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnTestSMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestSMSActionPerformed
        String NoHP = JOptionPane.showInputDialog(this,"Masukkan No. HP","628999199509");
        String isiPesan = JOptionPane.showInputDialog(this,"Entry Pesan : ","Isi Pesan", JOptionPane.QUESTION_MESSAGE);
        if(NoHP != null && isiPesan != null){
            JOptionPane.showMessageDialog(this,"No. HP : "+NoHP+" Pesan : "+isiPesan);
            pesanSMSMasuk(NoHP, isiPesan);
        }else return;
    }//GEN-LAST:event_btnTestSMSActionPerformed

    private void btnClearListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearListActionPerformed
        listModel.clear();
        listProses.removeAll();
    }//GEN-LAST:event_btnClearListActionPerformed

    private void btnClearIsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearIsiActionPerformed
        txtIsiBroadcast.setText("");
    }//GEN-LAST:event_btnClearIsiActionPerformed

    private void btnBatalBroadcastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalBroadcastActionPerformed
        if(threadBroadcast != null){
            threadBroadcast.stop();
            threadBroadcast = null;
            setList("Proses Broadcasting Dihentikan Oleh User....", 300);
            setList("Broadcasting Belum Berhasil Seluruhnya...", 300);
            btnBatalBroadcast.setEnabled(false);
            btnKirimBroadcast.setEnabled(true);
        }
    }//GEN-LAST:event_btnBatalBroadcastActionPerformed

    private void btnKirimBroadcastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKirimBroadcastActionPerformed
        final String isiBroadcast = ctrlComp.HandleIlegalChar(txtIsiBroadcast.getText().trim());
        countDataBC = 0;    cek = false;    String noHp = "";
        btnBatalBroadcast.setEnabled(true);
        btnKirimBroadcast.setEnabled(false);
        for(int i=0; i<tblDataKaryawan.getRowCount(); i++) {
            if(((Boolean)tblDataKaryawan.getValueAt(i, 0)).booleanValue()) {
                noHp += " "+tblDataKaryawan.getValueAt(i, 4).toString();
                cek = true;
                countDataBC ++;
                System.out.println(countDataBC+"="+noHp);
            }
        }
        prosesBroadcasting();
        //KirimSMS("08999199509","halo apa kabar cuy....");
    }//GEN-LAST:event_btnKirimBroadcastActionPerformed
    
    String isiBroadcast="", idBroadcast="";
    public void prosesBroadcasting(){
        if(!flagKoneksi){
            ctrlAlert.getInfoMessage(ctrlAlert.ERROR_NOSERVER_CON, ctrlAlert.INFO);
            btnBatalBroadcast.setEnabled(false);
            btnKirimBroadcast.setEnabled(true);
            return;
        }else if(!cek){
            ctrlAlert.getWarningMessage(ctrlAlert.EMPTY_DESTINATION, ctrlAlert.WARNING);
            btnBatalBroadcast.setEnabled(false);
            btnKirimBroadcast.setEnabled(true); 
            tabPane.setSelectedIndex(2);
            return;
        }else if(txtIsiBroadcast.getText().equals("")){
            ctrlAlert.getWarningMessage(ctrlAlert.EMPTY_BROADCAST, ctrlAlert.WARNING);
            btnBatalBroadcast.setEnabled(false);
            btnKirimBroadcast.setEnabled(true);           
            return;
        }else {
                threadBroadcast = new Thread() {
                    public void run() {
                        isiBroadcast = txtIsiBroadcast.getText().trim().replaceAll("'","''");
                        txtIsiBroadcast.setEditable(false);
                        int a = 0;
                        for(int i=0; i<tblDataKaryawan.getRowCount(); i++) {
                            if(((Boolean)tblDataKaryawan.getValueAt(i, 0)).booleanValue()) {   
 //utk liat table                               
 System.out.println("OKI="+tblDataKaryawan.getValueAt(i, 0).toString()+"=Kode"+ tblDataKaryawan.getValueAt(i, 1).toString()+"=nama="+ tblDataKaryawan.getValueAt(i, 2).toString()+"=alamat"+ tblDataKaryawan.getValueAt(i, 3).toString()+"=telp"+ tblDataKaryawan.getValueAt(i, 4).toString()+"=jabatan"+ tblDataKaryawan.getValueAt(i, 5).toString());
 //OKI=true=K0003=Andreas=jl.H.yamin=6289601838380=Staff
 
 broadcastingSMS(tblDataKaryawan.getValueAt(i, 4).toString(), tblDataKaryawan.getValueAt(i, 1).toString(),"BROADCASTING", isiBroadcast);
                                responTerminal("BROADCASTING INDEX KE-"+(a+1)+" KEPADA : "+
                                                tblDataKaryawan.getValueAt(i, 4).toString());
                               
                                a++;
                            }                    
                        }
                       
                        responTerminal("PROSES BROADCASTING SELESAI UNTUK PENGIRIMAN KEPADA "+a+" PENERIMA !");
                        responTerminal("DENGAN ISI PESAN : "+isiBroadcast);
                        btnBatalBroadcast.setEnabled(false);
                        btnKirimBroadcast.setEnabled(true); 
                        txtIsiBroadcast.setText("");
                        txtIsiBroadcast.setEditable(true);
                    }
                };
                threadBroadcast.start();
        }
    }
    
    public void broadcastingSMS(String noHpTujuan,String idKar, String judul, String isiBroadcast){
        // klo pke hp KirimSMSnya di uncomment & Sebaliknya.
        KirimSMS(noHpTujuan,isiBroadcast);  
//        responTerminal("HARUSNYA KEKIRIM");
        idBroadcast = ctrlID.getIDBroadcast();        
        String SQL = "INSERT INTO broadcast VALUES('"+idBroadcast+"','"+isiBroadcast+"','"+ctrlComp.getWaktuYMD()+"','"+ctrlComp.getWaktuJAM()+"','"+idKar+"');";
        if(ctrlManData.EXECUTE_QUERY(SQL, idBroadcast, "SIMPAN", false))
            setList("Broadcast Utk : "+idKar+" BERHASIL DISIMPAN Ke Broadcast !", 300);
        else
            setList("Broadcast Utk  : "+idKar+" GAGAL DISIMPAN Ke Broadcast !", 300);
                         
    }
    
    public void KirimSMS(String noHp, String Pesan){  
        int panjang     = Pesan.length();     
        int perhalaman  = PERHALAMAN;
        int x   = panjang / perhalaman;
        int y   = panjang % perhalaman;
        
        int karakter = 0;
        int halaman  = 0;
        String kirim= "";
        
        if(panjang>0){
            if(y>0){
                karakter    = y;
                halaman     = x+1;
            }
            else {
                karakter    = perhalaman;
                halaman     = x;
            }
            for(int i=0; i<halaman; i++){
                try {
                    if(i+1==halaman){
                        kirim   = Pesan.substring(i * perhalaman).toString();                    
                        smsServer.prosesKirimSms(noHp, kirim);   
                        System.out.println("ISI PESAN TERKIRIM : "+kirim+" Untuk : "+noHp);
                    }
                    else{
                        kirim   = Pesan.substring(i * perhalaman, (i+1) * perhalaman).toString();                    
                        smsServer.prosesKirimSms(noHp,kirim);       
                        System.out.println("ISI PESAN TERKIRIM : "+kirim+" Untuk : "+noHp);          
                    }
                } catch (Exception e) {
                    ctrlAlert.getErrorMessage(ctrlAlert.ERROR_SEND_SMS+"\n"+e.getMessage().toUpperCase() , ctrlAlert.ERROR);
                    responTerminal(ctrlAlert.ERROR_SEND_SMS+"\n"+e.getMessage().toUpperCase());
                    System.out.println(ctrlAlert.ERROR_SEND_SMS+"\n"+e.getMessage().toUpperCase());
                    return;
                }
            }
        }else{
            responTerminal("GAGAL MELAKUKAN PENGIRIMAN PESANAN, KARENA PESAN YANG DI KIRIM KOSONG");
            System.out.print("Isi pesan kosong !tidak ada pengiriman");
        }        
    }
    
    private void btnTutupKoneksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTutupKoneksiActionPerformed
        if(flagKoneksi){
            smsServer.prosesTutup();
            setCtrlButton(true);
            setAwal();
            mUtama.setCtrlTutupKoneksi();
        }
    }//GEN-LAST:event_btnTutupKoneksiActionPerformed

    private void btnBukaKoneksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBukaKoneksiActionPerformed
        Thread t = new Thread(){
            public void run(){
                try {
                    koneksi();
                } catch (InterruptedException ex) {
                    ex.printStackTrace();
                }
            }
        };
        t.start();
    }//GEN-LAST:event_btnBukaKoneksiActionPerformed

    private void txtCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyReleased
        // TODO add your handling code here:
        isiTableKaryawan();
    }//GEN-LAST:event_txtCariKeyReleased

    private void cbPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPortActionPerformed
   
    private void koneksi() throws InterruptedException{
       try {
                setCtrlButton(false);
                smsServer.setBaudRate(Integer.parseInt(cbKecepatan.getSelectedItem().toString()));
                smsServer.setPort(cbPort.getSelectedItem().toString());
                smsServer.setTerminal();
                mUtama.setCtrlBukaKoneksi();
                setLblStatKoneksi();
                btnKirimBroadcast.setEnabled(true);
                btnTutupKoneksi.setEnabled(true);
                btnTestSMS.setEnabled(true);
                flagKoneksi = true;
      } catch (Exception e) {
            setList("Proses Koneksi Gagal Dilakukan !", 100);
            ctrlAlert.getErrorMessage(ctrlAlert.ERROR_PORT_IN_USE,ctrlAlert.ERROR);
      }
   }
     
    private void isiComboKec() {
    	cbKecepatan.addItem("4800");
    	cbKecepatan.addItem("9600");
    	cbKecepatan.addItem("19200");
    	cbKecepatan.addItem("38400");
    	cbKecepatan.addItem("57600");
    	cbKecepatan.setSelectedIndex(2);
    }
    
    private void isiComboCari(){
        cmbCari.addItem("ID KARYAWAN");
        cmbCari.addItem("NAMA KARYAWAN");
        cmbCari.addItem("ALAMAT");
        cmbCari.addItem("NOMER HP");
        cmbCari.addItem("JABATAN");
    }
        
    public void setCtrlButton(boolean flag){
        cbKecepatan.setEnabled(flag);
        cbPort.setEnabled(flag);
        btnBukaKoneksi.setEnabled(flag);
    }    
    
    public void setAwal(){
        btnKirimBroadcast.setEnabled(false);
        btnBatalBroadcast.setEnabled(false);          
        btnTutupKoneksi.setEnabled(false);
        btnTestSMS.setEnabled(false);
        
        indexList = 0; 
        listModel.clear();
        listProses.removeAll();
        txtIsiBroadcast.setText("");
        lblStatusKoneksi.setText("Tidak ada koneksi");
        progresSinyal.setValue(0);
        flagKoneksi = false;
    }
    
    private void deteksiPort(){
         Thread t = new Thread() {
            public void run() {
                cbPort.removeAllItems();
                // Mencari daftar port-port yang tersedia
                java.util.Enumeration portList = gnu.io.CommPortIdentifier.getPortIdentifiers();
                java.util.Vector tampung=new java.util.Vector();
                while (portList.hasMoreElements()) {
                        // Mengambil nilai-nilai port yang ditemukan
                        gnu.io.CommPortIdentifier portId = (gnu.io.CommPortIdentifier) portList.nextElement();
                        // Hanya Port Serial yang diambil
                        if (portId.getPortType() == gnu.io.CommPortIdentifier.PORT_SERIAL) {
                            cbPort.addItem(portId.getName().toString());
                        } // Akhir if port getPortType
                } // Akhir while
             }
          };
        t.start();
    }

/*    
    public void pesanSMSMasuk(String no_handphone, String pesan) {
//        JOptionPane.showMessageDialog(this,"NO. HP : "+no_handphone+" Pesan : "+pesan,"Test SMS",2);
        ctrlPesan.setNoHp(ctrlComp.setNoHP(no_handphone));
        ctrlPesan.setIsiPesan(ctrlComp.HandleIlegalChar(pesan));
        ctrlPesan.prosesPesanMasuk();
    }
  */  
  public void pesanSMSMasuk(String no_handphone, String pesan) {
//        JOptionPane.showMessageDialog(this,"NO. HP : "+no_handphone+" Pesan : "+pesan,"Test SMS",2);
        ctrlPesan.setNoHp(ctrlComp.setNoHP(no_handphone));
        ctrlPesan.setIsiPesan(ctrlComp.HandleIlegalChar(pesan));
        ctrlPesan.prosesPesanMasuk();
        smsServer.prosesTutup();
        
                Thread t = new Thread(){
            public void run(){
                try {
                    koneksi();
                } catch (InterruptedException ex) {
                    ex.printStackTrace();
                }
            }
        };
        t.start();
        
    }   

    public void responTerminal(String respon) {
        setList(respon, 300);
        if(respon.startsWith("+CSQ")) {
            setSignal(respon);
        }
        
    }

    public void setSignal(String signal) {
        String b[]=signal.split(",");
        String sig[]=b[0].split(":");
        progresSinyal.setValue(Integer.parseInt(sig[1].trim()));
    }
    
    private void setLblStatKoneksi(){
        lblStatusKoneksi.setText("PORT : "+cbPort.getSelectedItem().toString()+" DI GUNAKAN");
    }
    
    public void setList(String isi, int delay){
        listModel.add(indexList,isi);
        listProses.setSelectionInterval(indexList,indexList);// memilih index dengan interval
        listProses.setSelectedIndex(indexList);
        listProses.ensureIndexIsVisible(indexList); //agar scrol mengikuti index yang terpilih
        try {
            Thread.sleep(delay);
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
        ++indexList;
        listProses.requestFocus();
    }

    private void dapatData(){     
        switch(cmbCari.getSelectedIndex()){
            case 0 : cariBy = "id_karyawan"; break;
            case 1 : cariBy = "nama"; break;
            case 3 : cariBy = "alamat"; break;
            case 2 : cariBy = "no_hp"; break;
            case 4 : cariBy = "jabatan"; break;
            default : cariBy = "id_karyawan";
        }
        kriteria = txtCari.getText().trim();
    }
    
    private void isiTableKaryawan() {  
        dapatData();
        ctrlComp.removeTable(tblDataKaryawan,tbModKaryawan);
        String SQL = "SELECT * FROM karyawan " +
                     "WHERE "+cariBy+" LIKE '%"+kriteria+"%' ORDER BY id_karyawan DESC ";
        ctrlManData.setDefaultTableCheckBox(SQL,tbModKaryawan,6);
    }
    
    public void addDataTabelSMSMasuk(String noInbox, String idReg, String no_hp, String waktu, String judul, String pesan, String balas) {
        int index = tblSmsMasuk.getRowCount();
        ((javax.swing.table.DefaultTableModel)tblSmsMasuk.getModel()).addRow(new Object[] {
           new Integer(index+1), noInbox, idReg, no_hp, waktu, judul, pesan, balas
        });
        tblSmsMasuk.setRowSelectionInterval(index, index);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatalBroadcast;
    private javax.swing.JButton btnBukaKoneksi;
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnClearIsi;
    private javax.swing.JButton btnClearList;
    private javax.swing.JButton btnKirimBroadcast;
    private javax.swing.JButton btnTestSMS;
    private javax.swing.JButton btnTutupKoneksi;
    private javax.swing.JComboBox cbKecepatan;
    private javax.swing.JComboBox cbPort;
    private javax.swing.JCheckBox chkKirimSemua;
    private javax.swing.JComboBox cmbCari;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblIsiBC;
    private javax.swing.JLabel lblJmlKarakter;
    private javax.swing.JLabel lblKarakter;
    private javax.swing.JLabel lblKec;
    private javax.swing.JLabel lblKet;
    private javax.swing.JLabel lblPort;
    private javax.swing.JLabel lblSinyal1;
    private javax.swing.JLabel lblStat1;
    private javax.swing.JLabel lblStatusKoneksi;
    private javax.swing.JList listProses;
    private javax.swing.JProgressBar progresSinyal;
    private javax.swing.JTabbedPane tabPane;
    private javax.swing.JTable tblDataKaryawan;
    public javax.swing.JTable tblSmsMasuk;
    private javax.swing.JTextArea txtBalas;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtIdReg;
    private javax.swing.JTextArea txtIsi;
    private javax.swing.JTextArea txtIsiBroadcast;
    private javax.swing.JTextField txtNoInbox;
    private javax.swing.JTextField txtWaktu;
    // End of variables declaration//GEN-END:variables
    public javax.swing.DefaultListModel listModel = new javax.swing.DefaultListModel();
    public javax.swing.table.DefaultTableModel tbModKaryawan, tbModSmsMasuk;
    public int indexList = 0, countDataBC=0;
    // buat max karakter kirim per halaman
    private static int PERHALAMAN = 120;
    private String cariBy="", kriteria="";
    private boolean flagKoneksi=false, cek = false;    
    private Thread threadBroadcast;
}
