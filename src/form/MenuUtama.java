package form;

import control.*;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Toolkit;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.LookAndFeel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

public class MenuUtama extends javax.swing.JFrame {
    ctrlAlert ctrlAlert;
    JInternalFrame fServer, fKaryawan, fSupplier,fPO,
                    fLogin,fBarang,fAdmin,fInbox,fBroadcast;
  
    /** Creates new form MenuUtama */
    public MenuUtama() {        
        initComponents();
       // setIconImage(new javax.swing.ImageIcon(getClass().getResource("/image/palito.jpg")).getImage());
        getContentPane().add(deskPane,java.awt.BorderLayout.CENTER);
        
        ctrlAlert = new ctrlAlert(this);
        animasiStatusBar();
        setMenu(true);
        LoginUser();
    }
    
     
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        pnlStatusBar = new javax.swing.JPanel();
        lblStatusBar = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        MenuBar = new javax.swing.JMenuBar();
        mnFile = new javax.swing.JMenu();
        miLogin = new javax.swing.JMenuItem();
        miLogout = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        miExit = new javax.swing.JMenuItem();
        mnMaster = new javax.swing.JMenu();
        miMasterKaryawan = new javax.swing.JMenuItem();
        miMasterSupplier = new javax.swing.JMenuItem();
        miMasterBarang = new javax.swing.JMenuItem();
        miMasterAdmin = new javax.swing.JMenuItem();
        mnTransaksi = new javax.swing.JMenu();
        miPO = new javax.swing.JMenuItem();
        mnSMS = new javax.swing.JMenu();
        miSMSServer = new javax.swing.JMenuItem();
        miSMSInbox = new javax.swing.JMenuItem();
        miSMSbroadcast = new javax.swing.JMenuItem();
        mnHelp = new javax.swing.JMenu();
        miAbout = new javax.swing.JMenuItem();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SMS Gateway Untuk Inventory");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(getIconImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnlStatusBar.setBackground(new java.awt.Color(255, 102, 0));
        pnlStatusBar.setPreferredSize(new java.awt.Dimension(100, 30));
        pnlStatusBar.setLayout(null);

        lblStatusBar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblStatusBar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatusBar.setText("PT. Palito Nusantara");
        lblStatusBar.setDebugGraphicsOptions(javax.swing.DebugGraphics.BUFFERED_OPTION);
        lblStatusBar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnlStatusBar.add(lblStatusBar);
        lblStatusBar.setBounds(0, 0, 1030, 30);
        pnlStatusBar.add(jPanel5);
        jPanel5.setBounds(0, -120, 870, 110);
        pnlStatusBar.add(jPanel6);
        jPanel6.setBounds(0, -40, 870, 40);

        getContentPane().add(pnlStatusBar, java.awt.BorderLayout.SOUTH);

        MenuBar.setToolTipText("");
        MenuBar.setBorderPainted(false);

        mnFile.setText("File");

        miLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/login.png"))); // NOI18N
        miLogin.setText("Login");
        miLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miLoginActionPerformed(evt);
            }
        });
        mnFile.add(miLogin);

        miLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logout.png"))); // NOI18N
        miLogout.setText("Logout");
        miLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miLogoutActionPerformed(evt);
            }
        });
        mnFile.add(miLogout);
        mnFile.add(jSeparator1);

        miExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/exit.png"))); // NOI18N
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        mnFile.add(miExit);

        MenuBar.add(mnFile);

        mnMaster.setText("Master");

        miMasterKaryawan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Vista_icons_09.png"))); // NOI18N
        miMasterKaryawan.setText("Master Karyawan");
        miMasterKaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miMasterKaryawanActionPerformed(evt);
            }
        });
        mnMaster.add(miMasterKaryawan);

        miMasterSupplier.setIcon(new javax.swing.ImageIcon("D:\\Data Kuliah\\Semester 5\\Inventory\\src\\image\\supplier.png")); // NOI18N
        miMasterSupplier.setText("Master Supplier");
        miMasterSupplier.setAutoscrolls(true);
        miMasterSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miMasterSupplierActionPerformed(evt);
            }
        });
        mnMaster.add(miMasterSupplier);

        miMasterBarang.setIcon(new javax.swing.ImageIcon("D:\\Data Kuliah\\Semester 5\\Inventory\\src\\image\\barang.png")); // NOI18N
        miMasterBarang.setText("Master Barang");
        miMasterBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miMasterBarangActionPerformed(evt);
            }
        });
        mnMaster.add(miMasterBarang);

        miMasterAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/admin.png"))); // NOI18N
        miMasterAdmin.setText("Master Administrator");
        miMasterAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miMasterAdminActionPerformed(evt);
            }
        });
        mnMaster.add(miMasterAdmin);

        MenuBar.add(mnMaster);

        mnTransaksi.setText("Transaksi");

        miPO.setIcon(new javax.swing.ImageIcon("D:\\Data Kuliah\\Semester 5\\Inventory\\src\\image\\order.png")); // NOI18N
        miPO.setText("PO");
        miPO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPOActionPerformed(evt);
            }
        });
        mnTransaksi.add(miPO);

        MenuBar.add(mnTransaksi);

        mnSMS.setText("Server");

        miSMSServer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/server.png"))); // NOI18N
        miSMSServer.setText("SMS Server");
        miSMSServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSMSServerActionPerformed(evt);
            }
        });
        mnSMS.add(miSMSServer);

        miSMSInbox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/inbox.png"))); // NOI18N
        miSMSInbox.setText("Inbox");
        miSMSInbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSMSInboxActionPerformed(evt);
            }
        });
        mnSMS.add(miSMSInbox);

        miSMSbroadcast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/outbox.png"))); // NOI18N
        miSMSbroadcast.setText("Outbox");
        miSMSbroadcast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSMSbroadcastActionPerformed(evt);
            }
        });
        mnSMS.add(miSMSbroadcast);

        MenuBar.add(mnSMS);

        mnHelp.setText("About");
        mnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnHelpActionPerformed(evt);
            }
        });

        miAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/about.png"))); // NOI18N
        miAbout.setText("About");
        miAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAboutActionPerformed(evt);
            }
        });
        mnHelp.add(miAbout);

        MenuBar.add(mnHelp);

        setJMenuBar(MenuBar);

        setSize(new java.awt.Dimension(1461, 683));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void miAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAboutActionPerformed
        //new About(this, true).setVisible(true);
        about();
    }//GEN-LAST:event_miAboutActionPerformed

    private void about(){
         String teks1 = "<html> <head> <body align='center'> <font face='Arial' color='RED'>" +
                     "APLIKASI SMS GATEWAY UNTUK<br>" +
                     "MENGETAHUI DATA INVENTORY PADA<br>" +
                     "PT. PALITO NUSANTARA" +
                     "</font></body></head></html>";
        
        javax.swing.JLabel teks = new javax.swing.JLabel(teks1);
        javax.swing.JPanel pnl = new javax.swing.JPanel();
        pnl.setSize(150,300);
        pnl.add(teks);
        JOptionPane.showMessageDialog(this,pnl,"HELP", JOptionPane.INFORMATION_MESSAGE);
    }
    private void miSMSInboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSMSInboxActionPerformed
        getFormInbox();
    }//GEN-LAST:event_miSMSInboxActionPerformed

    private void getFormInbox(){
        if(!deskPane.isAncestorOf(fInbox)) {
            fInbox = new frmInbox(this);
            deskPane.add(fInbox);
            try{
                fInbox.setVisible(true);
                fInbox.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fInbox.getSize();
                fInbox.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.err.println("Form Inbox Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        } else {
            try {
                fInbox.setSelected(true);
            } catch (Exception e2) {System.err.println("form Inbox Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        }
    }
     
    private void miSMSbroadcastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSMSbroadcastActionPerformed
        getFormOutbox();
    }//GEN-LAST:event_miSMSbroadcastActionPerformed
  
    private void getFormOutbox(){
        if(!deskPane.isAncestorOf(fBroadcast)) {
           fBroadcast = new frmOutbox(this);
            deskPane.add(fBroadcast);
            try{
                fBroadcast.setVisible(true);
                fBroadcast.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fBroadcast.getSize();
                fBroadcast.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.err.println("Form Outbox Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        } else {
            try {
                fBroadcast.setSelected(true);
            } catch (Exception e2) {System.err.println("Form Outbox Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        }
    }
     
    private void miMasterAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miMasterAdminActionPerformed
        getFormAdmin();
    }//GEN-LAST:event_miMasterAdminActionPerformed

    private void getFormAdmin(){
        if(!deskPane.isAncestorOf(fAdmin)) {
            fAdmin = new frmAdmin(this);
            deskPane.add(fAdmin);
            try{
                fAdmin.setVisible(true);
                fAdmin.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fAdmin.getSize();
                fAdmin.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.err.println("Form Admin Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        } else {
            try {
                fAdmin.setSelected(true);
            } catch (Exception e2) {System.err.println("Form Admin Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        }
    }
     
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(exitApp()){    
            if(statusKoneksi){ // jika koneksi masih terbuka
                ctrlAlert.getWarningMessage(ctrlAlert.KONEKSI_OPEN, ctrlAlert.WARNING);
                this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
            }else
                System.exit(0);
        }else
            this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if(exitApp()){    
            if(statusKoneksi){ // jika koneksi masih terbuka
                ctrlAlert.getWarningMessage(ctrlAlert.KONEKSI_OPEN, ctrlAlert.WARNING);
                this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
            }else
                System.exit(0);
        }else
            this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosed
    
    private void miSMSServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSMSServerActionPerformed
        getFormServer();
    }//GEN-LAST:event_miSMSServerActionPerformed

    private void getFormServer(){
        if(!deskPane.isAncestorOf(fServer)) {
            fServer = new frmServer(this);
            deskPane.add(fServer);
            try{
                fServer.setVisible(true);
                fServer.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fServer.getSize();
                fServer.setLocation(0,0);
            } catch (Exception e2) {System.err.println("Server Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }            
        } else {
            try {
                fServer.setSelected(true);
            } catch (Exception e2) {System.err.println("Server Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }           
        }
    }
    
    
    private void miMasterKaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miMasterKaryawanActionPerformed
        getFormKaryawan();
    }//GEN-LAST:event_miMasterKaryawanActionPerformed
 
    private void getFormKaryawan(){
        if(!deskPane.isAncestorOf(fKaryawan)) {
            fKaryawan = new frmKaryawan(this);
            deskPane.add(fKaryawan);
            try{
                fKaryawan.setVisible(true);
                fKaryawan.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fKaryawan.getSize();
                fKaryawan.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.out.println("Form Karyawan Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }            
        } else {
            try {
                fKaryawan.setSelected(true);
            } catch (Exception e2) {System.out.println("Form Karyawan Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }           
        }
    }

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        if(exitApp()){    
            if(statusKoneksi){ // jika koneksi masih terbuka
                ctrlAlert.getWarningMessage(ctrlAlert.KONEKSI_OPEN, ctrlAlert.WARNING);
                this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
            }else
                System.exit(0);
        }else
            this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_miExitActionPerformed

    private void miLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miLogoutActionPerformed
        JInternalFrame iF[] = deskPane.getAllFrames();
        if(iF.length > 0){
            JOptionPane.showMessageDialog(this,"Silahkan Tutup Semua Form Terlebih Dahulu!","Informasi",1);
            return;
        }else
            setMenu(false);
    }//GEN-LAST:event_miLogoutActionPerformed

    private void miLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miLoginActionPerformed
        LoginUser();
    }//GEN-LAST:event_miLoginActionPerformed
 
    private void LoginUser(){
         if(!deskPane.isAncestorOf(fLogin)) {
            fLogin = new frmLoginUser(this);
            deskPane.add(fLogin);
            try{
                fLogin.setVisible(true);
                fLogin.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fLogin.getSize();
                fLogin.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.out.println("Form LoginUser Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }            
        } else {
            try {
                fLogin.setSelected(true);
            } catch (Exception e2) {System.out.println("Form LoginUser Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }           
        }   
    }
    private void mnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnHelpActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_mnHelpActionPerformed

    private void miMasterSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miMasterSupplierActionPerformed
        getFormSupplier();
    }//GEN-LAST:event_miMasterSupplierActionPerformed
private void getFormSupplier(){
         if(!deskPane.isAncestorOf(fSupplier)) {
            fSupplier = new frmSupplier(this);
            deskPane.add(fSupplier);
            try{
                fSupplier.setVisible(true);
                fSupplier.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fSupplier.getSize();
                fSupplier.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.out.println("Form Supplier Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        } else {
            try {
                fSupplier.setSelected(true);
            } catch (Exception e2) {System.out.println("Form Supplier Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        }
    }
    private void miMasterBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miMasterBarangActionPerformed
        getFormBarang();
    }//GEN-LAST:event_miMasterBarangActionPerformed
private void getFormBarang(){
         if(!deskPane.isAncestorOf(fBarang)) {
            fBarang = new frmBarang(this);
            deskPane.add(fBarang);
            try{
                fBarang.setVisible(true);
                fBarang.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fBarang.getSize();
                fBarang.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.out.println("Form Barang Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        } else {
            try {
                fBarang.setSelected(true);
            } catch (Exception e2) {System.out.println("Form Barang Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        }
    }
    private void miPOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPOActionPerformed
       getFormPO();
    }//GEN-LAST:event_miPOActionPerformed
private void getFormPO(){
         if(!deskPane.isAncestorOf(fPO)) {
            fPO = new frmPO(this);
            deskPane.add(fPO);
            try{
                fPO.setVisible(true);
                fPO.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fPO.getSize();
                fPO.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.out.println("Form PO Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        } else {
            try {
                fPO.setSelected(true);
            } catch (Exception e2) {System.out.println("Form PO Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        }
    }
    
    
    
    public void setCtrlBukaKoneksi() {
        statusKoneksi = true;
    }
    
    public void setCtrlTutupKoneksi() {
        statusKoneksi = false;
    }
    
    public boolean getStatusKoneksi(){
        return statusKoneksi;
    }

    private void animasiStatusBar() {
        Thread t=new Thread() {
            public void run() {
                while(true) {
                    lblStatusBar.setText(JUDUL_STATUS_BAR);
                    if(!statBar) {
                        JUDUL_STATUS_BAR = " "+JUDUL_STATUS_BAR;
                        if(JUDUL_STATUS_BAR.length() == 140) {
                            statBar=true;
                        }
                    }else {
                        JUDUL_STATUS_BAR = JUDUL_STATUS_BAR.substring(1);
                        if(JUDUL_STATUS_BAR.length() == 80) {
                            statBar=false;
                        }
                    }
                    try {
                        Thread.sleep(100);
                    } catch(Exception e) {}
                }
            }
        };
        t.start();
    }
   
    public void setMenu(boolean flag){
        miLogin.setEnabled(!flag);
        miLogout.setEnabled(flag);
        miMasterKaryawan.setEnabled(flag);
        miMasterBarang.setEnabled(flag);
        miMasterSupplier.setEnabled(flag);
        miMasterAdmin.setEnabled(flag);
        miSMSServer.setEnabled(flag);
        miSMSInbox.setEnabled(flag);
        miSMSbroadcast.setEnabled(flag);
        miPO.setEnabled(flag);

    }
    
    private boolean exitApp() {
        Object[] obj = { "Ya", "Tidak" };
        int ask = JOptionPane.showOptionDialog(null, " Apakah Anda Ingin Mengakhiri Aplikasi ini ?",
                "KONFIRMASI", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
                null, obj, obj[1]);
        if(ask == 0) {
            return true;
        }
        return false;
    }
      
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblStatusBar;
    private javax.swing.JMenuItem miAbout;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miLogin;
    private javax.swing.JMenuItem miLogout;
    private javax.swing.JMenuItem miMasterAdmin;
    private javax.swing.JMenuItem miMasterBarang;
    private javax.swing.JMenuItem miMasterKaryawan;
    private javax.swing.JMenuItem miMasterSupplier;
    private javax.swing.JMenuItem miPO;
    private javax.swing.JMenuItem miSMSInbox;
    private javax.swing.JMenuItem miSMSServer;
    private javax.swing.JMenuItem miSMSbroadcast;
    private javax.swing.JMenu mnFile;
    private javax.swing.JMenu mnHelp;
    private javax.swing.JMenu mnMaster;
    private javax.swing.JMenu mnSMS;
    private javax.swing.JMenu mnTransaksi;
    private javax.swing.JPanel pnlStatusBar;
    // End of variables declaration//GEN-END:variables
    private boolean statusKoneksi = false, statBar = false;
    private String JUDUL_STATUS_BAR = "### PT. Palito Nusantara  ###";
   
    private javax.swing.JDesktopPane deskPane=new javax.swing.JDesktopPane() {
        public void paintComponent(java.awt.Graphics g) {
            super.paintComponent(g);
            java.awt.Image gm=new javax.swing.ImageIcon(getClass().getResource("/image/palito.jpg")).getImage();
            g.drawImage(gm,240,260,this);
        }
    }; 
   
}
